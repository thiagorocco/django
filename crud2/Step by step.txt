1. Terminal: python3 -m venv venv;
2. Terminal: pip install django;
3. Terminal: django-admin startproject mypro .;
4. Terminal: python manage.py startapp newapp;
5. Vá até settings.py e em INSTALLED_APPS insira na última posição o valor 'newapp',;
6. Crie o arquivo urls.py dentro de newapp e insira esse código:
    from django.urls import path
    from . import views

    urlpatterns = [
        path('', views.index, name="index"),
    ]
7. Em views.py crie a view index:
    from django.shortcuts import render

    # Create your views here.
    def index(request):
        return render(request, 'index.html')

8. Em mypro/urls.py inclua o caminho para acessar newapp.urls: 

    from django.contrib import admin
    from django.urls import path, include

    urlpatterns = [
        path('admin/', admin.site.urls),
        path('', include('newapp.urls')),


9. Na pasta newapp crie a pasta templates e dentro dela crie o arquivo index.html:

    <!DOCTYPE html>
    <html lang="pt-br">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
    </head>


    <body>
        <div class="container">
            <h1>Members</h1>
            <table id="customers" border="1">
                <thead>
                    <th>Id</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Country</th>
                    <th colspan="2" id="mid">Action</th>
                </thead>
                <tr>
                    <td>1</td>
                    <td>Robert</td>
                    <td>Steward</td>
                    <td>Usa</td>
                    <td>
                        <a href=""><button id="up">Update</button></a>
                    </td>
                    <td>
                        <a href=""><button id="del">Delete</button></a>
                    </td>
                </tr>
            </table>
            <br><br>
            <! -- <a href="{% url 'add' %}"><button id="new3">Add Member</button></a> -->

        </div>
    </body>
    </html>

10. Vá em models.py e insira o código:
    from django.db import models

    # Create your models here.
    class Members(models.Model):
        firstname = models.CharField(max_length=100)
        lastname = models.CharField(max_length=100)
        country = models.CharField(max_length=100)

11. No terminal: python manage.py makemigrations
12. No terminal: python manage.py migrate

13. Vá até views.py, importe o modelo Members e retorne os dados dele no template index:

    from django.shortcuts import render
    from .models import Member # Incluido aqui

    # Create your views here.
    def index(request):
        mem = Member.objects.all() # Incluido aqui
        return render(request, 'index.html',{'mem': mem}) # Alterado e incluido aqui

14. Em admin.py registre o modelo de dados para ficar acessível. Insira o código:

    from django.contrib import admin
    from .models import Member

    class MemberAdmin(admin.ModelAdmin):
        #Isso exibe os nomes assim como o método __str__ faria em models
        list_display="firstname","lastname","country"

    admin.site.register(Member,MemberAdmin)


15. Crie um superusuario. No terminal: python manage.py createsuperuser.
16. Acesse localhost:8000/admin e acesse o banco de dados do seu model. Cadastre alguns registros. 

16. Vá até templates/index.html e insira o for DTL para puxar os registros do banco de dados dinamicamente:

     <!DOCTYPE html>
    <html lang="pt-br">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
    </head>


    <body>
        <div class="container">
            <h1>Members</h1>
            <table id="customers" border="1">
                <thead>
                    <th>Id</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Country</th>
                    <th colspan="2" id="mid">Action</th>
                </thead>
                <!-- trecho alterado/incluído -->
                {% for x in mem %}
                <tr>
                    <td>{{ x.id }}</td>
                    <td>{{ x.firstname }}</td>
                    <td>{{ x.lastname }}</td>
                    <td>{{ x.country }}</td>
                    <td>
                        <a href=""><button id="up">Update</button></a>
                    </td>
                    <td>
                        <a href=""><button id="del">Delete</button></a>
                    </td>
                </tr>
                {% endfor %}

            </table>
            <br><br>
            <a href=""><button id="new3">Add Member</button></a>
        </div>
    </body>
    </html>

17. Dentro de newapp crie a pasta static e dentro dela crie o arquivo style.css e insira esse código nele:

    .container {
        margin: 80px 240px 60px 240px;
        padding: 0px 100px 100px 100px;
    }

    #customers {
        font-family: Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    #customers td,
    #customers th {
        border: 1px solid rgb(17, 4, 4);
        padding: 6px;
    }

    #customers tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    #customers tr:hover {
        background-color: #ddd;
    }

    #customers th {
        padding-top: 12px;
        padding-bottom: 12px;
        text-align: left;
        background-color: #04AA6D;
        color: white;
    }

    #customers #mid {
        text-align: center;
    }

    #customers #up {
        background-color: blue;
        border-color: white;
        border-radius: 5px;
        padding: 8px;
        color: white;
    }

    #customers #del {
        background-color: red;
        border-color: white;
        border-radius: 5px;
        padding: 8px;
        color: white;
    }

    #customers button {
        width: 100%;
    }

    .container1 #new {
        background-color: blue;
        border-color: red;
        border-radius: 5px;
        padding: 8px;
        color: white;
    }

    .container2 #new1 {
        background-color: blue;
        border-color: red;
        border-radius: 5px;
        padding: 8px;
        color: white;
    }

    h1 {
        color: green;
    }

    .container1 input {
        padding: 8px;
    }

    .container2 input {
        padding: 8px;
    }

    .container1 {
        margin: 80px 240px 60px 240px;
        padding: 0px 100px 100px 100px;
    }

    .container2 {
        margin: 80px 240px 60px 240px;
        padding: 0px 100px 100px 100px;
    }

    .container #new3 {
        padding: 8px;
        background-color: rgb(27, 24, 199);
        color: white;
        border-radius: 4px;
        border-color: #04AA6D;
    }

18. Vá no arquivo index.html e insira como folha de estilo esse arquivo através da tag link:
    {% load static %}
    <link rel="stylesheet" href="{% static 'style.css' %}">

19. Crie o arquivo add.html dentro de templates:
    <!DOCTYPE html>
    <html lang="pt-br">

    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
    </head>
    {% load static %}
    <link rel="stylesheet" href="{% static 'style.css' %}">

    <body>
        <div class="container1">
            <h1>Add Member</h1>
            <form action="{% url 'addrec' %}" method="post"> -->
            <form action="" method="post">
                {% csrf_token %}
                <label for="">First Name</label><br><br>
                <input type="text" name="first"><br><br>
                <label for="">Last Name</label><br><br>
                <input type="text" name="last"><br><br>
                <label for="">Country</label><br><br>
                <input type="text" name="country"><br><br>
                <button type="submit" id="new">Submit</button>
            </form>
        </div>
    </body>

    </html>

20. Em views.py adicione as view add e addrec:

    from django.shortcuts import render, redirect
    from .models import Member

    def index(request):
        mem = Member.objects.all()
        return render(request, 'index.html',{'mem': mem})
    
    #trechos incluídos
    def add(request):
        return render(request, 'add.html')

    def addrec(request):
        x = request.POST['first']
        y = request.POST['last']
        z = request.POST['country']
        mem = Member(firstname=x, lastname=y,country=z)
        mem.save()
        return redirect('/') 

21. Em urls.py adicione uma rota para add e outra para addrec:
   
     from django.urls import path
    from . import views

    urlpatterns = [
        path('', views.index, name='index'),
        path('add/',views.add, name='add' ) # trecho incluído
        path('addrec/',views.addrec, name='addrec' ) # trecho incluído
    ]

22. Descomente a linha do link em index.html que antes tinha um comentário.
 *** Aqui já temos a função CREATE funcionando ***

23. Vá até views.py e crie a view delete:
    def delete(request, id):
    mem = Member.objects.get(id=id)
    mem.delete()
    return redirect('/')

24. Em urls.py acrescente uma rota para delete:
    
    from django.urls import path
    from . import views

    urlpatterns = [
        path('', views.index, name='index'),
        path('add/',views.add, name='add' ),
        path('addrec/',views.addrec, name='addrec'),
        path('delete/<int:id>/',views.delete, name='delete'), # trecho incluído
    ]

25. Vá em index.html e no <a> que contém o botão Delete inclua a seguinte url em href:
    "delete/{{x.id}}"

    Agora teste a exclusão.

26. Agora vamos para a última operação, update. Crie um arquivo html chamado update em templates com o seguinte código:
    
    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
    </head>
    {% load static %}
    <link rel="stylesheet" href="{% static 'style.css' %}">

    <body>
        <div class="container2">
            <h1>Update Member</h1>
            <form action="{% url 'uprec' mem.id %}" method="post">
                {% csrf_token %}
                <label for="">First name</label><br><br>
                <input type="text" name="first" value="{{mem.firstname}}"><br><br>
                <label for="">Last name</label><br><br>
                <input type="text" name="last" value="{{mem.lastname}}"><br><br>
                <label for="">Country</label><br><br>
                <input type="text" name="country" value="{{mem.country}}"><br><br>
                <button type="submit" id="new1">Update</button>
            </form>

        </div>
    </body>

    </html>

27. Em views.py crie a view update:

    




